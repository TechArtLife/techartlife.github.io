"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[6798],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>m});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),d=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},l=function(e){var t=d(e.components);return r.createElement(s.Provider,{value:t},e.children)},c="mdxType",y={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,l=p(e,["components","mdxType","originalType","parentName"]),c=d(n),u=o,m=c["".concat(s,".").concat(u)]||c[u]||y[u]||i;return n?r.createElement(m,a(a({ref:t},l),{},{components:n})):r.createElement(m,a({ref:t},l))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=u;var p={};for(var s in t)hasOwnProperty.call(t,s)&&(p[s]=t[s]);p.originalType=e,p[c]="string"==typeof e?e:o,a[1]=p;for(var d=2;d<i;d++)a[d]=n[d];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},5065:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>y,frontMatter:()=>i,metadata:()=>p,toc:()=>d});var r=n(7462),o=(n(7294),n(3905));const i={title:"\u3010\u7f16\u7a0b\u8bed\u8a00\u3011pybind11\u4e2d\u6570\u7ec4\u7c7b\u6210\u5458\u7684\u4f7f\u7528",date:"2021-10-28T22:40:32.169Z",description:"\u3010\u7f16\u7a0b\u8bed\u8a00\u3011pybind11\u4e2d\u6570\u7ec4\u7c7b\u6210\u5458\u7684\u4f7f\u7528."},a=void 0,p={unversionedId:"\u7f16\u7a0b\u8bed\u8a00/python/pybind11-array/index",id:"\u7f16\u7a0b\u8bed\u8a00/python/pybind11-array/index",title:"\u3010\u7f16\u7a0b\u8bed\u8a00\u3011pybind11\u4e2d\u6570\u7ec4\u7c7b\u6210\u5458\u7684\u4f7f\u7528",description:"\u3010\u7f16\u7a0b\u8bed\u8a00\u3011pybind11\u4e2d\u6570\u7ec4\u7c7b\u6210\u5458\u7684\u4f7f\u7528.",source:"@site/docs/\u7f16\u7a0b\u8bed\u8a00/python/pybind11-array/index.md",sourceDirName:"\u7f16\u7a0b\u8bed\u8a00/python/pybind11-array",slug:"/\u7f16\u7a0b\u8bed\u8a00/python/pybind11-array/",permalink:"/docs/\u7f16\u7a0b\u8bed\u8a00/python/pybind11-array/",draft:!1,tags:[],version:"current",frontMatter:{title:"\u3010\u7f16\u7a0b\u8bed\u8a00\u3011pybind11\u4e2d\u6570\u7ec4\u7c7b\u6210\u5458\u7684\u4f7f\u7528",date:"2021-10-28T22:40:32.169Z",description:"\u3010\u7f16\u7a0b\u8bed\u8a00\u3011pybind11\u4e2d\u6570\u7ec4\u7c7b\u6210\u5458\u7684\u4f7f\u7528."},sidebar:"tutorialSidebar",previous:{title:"EP\u7b2c1\u6761\uff1a\u67e5\u8be2\u81ea\u5df1\u4f7f\u7528\u7684Python\u7248\u672c",permalink:"/docs/\u7f16\u7a0b\u8bed\u8a00/python/effective-python/ep1-python-version"},next:{title:"Python GUI\u5e93-Kivy\u6982\u89c8",permalink:"/docs/\u7f16\u7a0b\u8bed\u8a00/python/python-gui-kivy-introduction/"}},s={},d=[{value:"C++",id:"c",level:2},{value:"Python",id:"python",level:2},{value:"\u53c2\u8003\u6587\u732e",id:"\u53c2\u8003\u6587\u732e",level:2}],l={toc:d},c="wrapper";function y(e){let{components:t,...n}=e;return(0,o.kt)(c,(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"c"},"C++"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},'#include <pybind11/pybind11.h>\n#include <pybind11/stl.h> // \u81ea\u52a8\u8f6c\u6362 std::array<>\n\nnamespace py = pybind11;\n\nstruct Student\n{\n    int id;\n    std::string name;\n};\n\nstruct ClassRoom\n{\n    std::array<Student, 10> students; // Right\n    // Student students[10]; // Error\n};\n\nPYBIND11_MODULE(pytest, m) {\n\n    py::class_<Student>(m, "Student")\n        .def(py::init())\n        .def_readwrite("id", &Student::id)\n        .def_readwrite("name", &Student::name);\n\n    py::class_<ClassRoom>(m, "ClassRoom")\n        .def(py::init())\n        .def_readwrite("students", &ClassRoom::students);\n}\n\n')),(0,o.kt)("h2",{id:"python"},"Python"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'# ===================================================\n# \u5b66\u4e60pybind11\u7684\u4f7f\u7528\n# ===================================================\nimport pytest\n\nclass_room = pytest.ClassRoom()\nclass_room.students[2].name = "Tom"\n')),(0,o.kt)("h2",{id:"\u53c2\u8003\u6587\u732e"},"\u53c2\u8003\u6587\u732e"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/pybind/pybind11/issues/2149"},"https://github.com/pybind/pybind11/issues/2149"))))}y.isMDXComponent=!0}}]);