"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[438],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>L});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function u(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var c=a.createContext({}),o=function(e){var n=a.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},p=function(e){var n=o(e.components);return a.createElement(c.Provider,{value:n},e.children)},s="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},d=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,c=e.parentName,p=u(e,["components","mdxType","originalType","parentName"]),s=o(t),d=r,L=s["".concat(c,".").concat(d)]||s[d]||m[d]||i;return t?a.createElement(L,l(l({ref:n},p),{},{components:t})):a.createElement(L,l({ref:n},p))}));function L(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,l=new Array(i);l[0]=d;var u={};for(var c in n)hasOwnProperty.call(n,c)&&(u[c]=n[c]);u.originalType=e,u[s]="string"==typeof e?e:r,l[1]=u;for(var o=2;o<i;o++)l[o]=t[o];return a.createElement.apply(null,l)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},3764:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>m,frontMatter:()=>i,metadata:()=>u,toc:()=>o});var a=t(7462),r=(t(7294),t(3905));const i={title:"\u4f7f\u7528CMake\u5c06Lua\u5d4c\u5165\u5230\u5176\u4ed6\u5e94\u7528\u4e2d",date:"2021-05-01T22:12:03.284Z",description:"\u597d\u7528\u6781\u4e86"},l="Lua",u={unversionedId:"tech/programming/lua/cmake-lua-embeding/index",id:"tech/programming/lua/cmake-lua-embeding/index",title:"\u4f7f\u7528CMake\u5c06Lua\u5d4c\u5165\u5230\u5176\u4ed6\u5e94\u7528\u4e2d",description:"\u597d\u7528\u6781\u4e86",source:"@site/docs/tech/programming/lua/cmake-lua-embeding/index.md",sourceDirName:"tech/programming/lua/cmake-lua-embeding",slug:"/tech/programming/lua/cmake-lua-embeding/",permalink:"/docs/tech/programming/lua/cmake-lua-embeding/",draft:!1,tags:[],version:"current",frontMatter:{title:"\u4f7f\u7528CMake\u5c06Lua\u5d4c\u5165\u5230\u5176\u4ed6\u5e94\u7528\u4e2d",date:"2021-05-01T22:12:03.284Z",description:"\u597d\u7528\u6781\u4e86"}},c={},o=[],p={toc:o},s="wrapper";function m(e){let{components:n,...t}=e;return(0,r.kt)(s,(0,a.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"lua"},"Lua"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Repo\uff1a ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/lua/lua"},"https://github.com/lua/lua"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"\u5b98\u7f51\uff1a",(0,r.kt)("a",{parentName:"p",href:"https://www.lua.org/lua-l.html"},"https://www.lua.org/lua-l.html"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"\u7248\u672c\uff1a v5.4.4"))),(0,r.kt)("h1",{id:"\u4f7f\u7528cmake\u5d4c\u5165lua"},"\u4f7f\u7528CMake\u5d4c\u5165Lua"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"lua.cmake"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-cmake"},'set(LUA_LIB_SRCS \n    "${LuaDir}/lapi.c"\n    "${LuaDir}/lcode.c"\n    "${LuaDir}/lctype.c"\n    "${LuaDir}/ldebug.c"\n    "${LuaDir}/ldo.c"\n    "${LuaDir}/ldump.c"\n    "${LuaDir}/lfunc.c"\n    "${LuaDir}/lgc.c"\n    "${LuaDir}/llex.c"\n    "${LuaDir}/lmem.c"\n    "${LuaDir}/lobject.c"\n    "${LuaDir}/lopcodes.c"\n    "${LuaDir}/lparser.c"\n    "${LuaDir}/lstate.c"\n    "${LuaDir}/lstring.c"\n    "${LuaDir}/ltable.c"\n    "${LuaDir}/ltm.c"\n    "${LuaDir}/lundump.c"\n    "${LuaDir}/lvm.c"\n    "${LuaDir}/lzio.c"\n    "${LuaDir}/lauxlib.c"\n    "${LuaDir}/lbaselib.c"\n    "${LuaDir}/lcorolib.c"\n    "${LuaDir}/ldblib.c"\n    "${LuaDir}/liolib.c"\n    "${LuaDir}/lmathlib.c"\n    "${LuaDir}/loadlib.c"\n    "${LuaDir}/loslib.c"\n    "${LuaDir}/lstrlib.c"\n    "${LuaDir}/ltablib.c"\n    "${LuaDir}/lutf8lib.c"\n    "${LuaDir}/linit.c"\n)\n\nset(LUA_LIB_HEADERS \n    "${LuaDir}/lua.h"\n    "${LuaDir}/lualib.h"\n    "${LuaDir}/luaconf.h"\n    "${LuaDir}/lauxlib.h"\n)\n\nadd_library(lua_static STATIC ${LUA_LIB_SRCS} ${LUA_LIB_HEADERS})\nset_target_properties(lua_static PROPERTIES OUTPUT_NAME "lua")\ntarget_include_directories(lua_static PUBLIC ${LUA_LIB_HEADERS})\n\nif(UNIX)\n    set(LUA_DEFINITIONS)\n\n    if(NOT EMSCRIPTEN)\n        find_library(LIBM m)\n        #TODO: Redo this with find_package\n        if(NOT LIBM)\n            message(FATAL_ERROR "libm not found and is required by lua")\n        endif()\n        target_link_libraries(lua_static INTERFACE ${LIBM})\n\n        list(APPEND LUA_DEFINITIONS LUA_USE_POSIX)\n        if(LUA_SUPPORT_DL)\n            target_compile_definitions(lua_static PRIVATE "LUA_USE_DLOPEN")\n            target_link_libraries(lua_static INTERFACE dl)\n        endif()\n    endif()\n\n    target_compile_definitions(lua_static \n        PUBLIC ${LUA_DEFINITIONS}\n    )\n    target_compile_options(lua_static\n        PRIVATE "-Wall" "-Wextra"\n    )\nendif()\n\nif(LUA_BUILD_BINARY)\n    include(CheckIncludeFile)\n    CHECK_INCLUDE_FILE("readline/readline.h" HAVE_READLINE_READLINE_H)\n\n    add_executable(lua "${LuaDir}/lua.c")\n    target_link_libraries(lua PUBLIC lua_static)\n    set_target_properties(lua PROPERTIES \n        RUNTIME_OUTPUT_DIRECTORY ${PROJECT_BINARY_DIR}\n    )\n    if (HAVE_READLINE_READLINE_H)\n        target_compile_definitions(lua PUBLIC "LUA_USE_READLINE")\n        target_link_libraries(lua PUBLIC readline)\n    endif()\nendif()\n\nif(LUA_BUILD_COMPILER)\n    add_executable(luac "${LuaDir}/luac.c")\n    target_link_libraries(luac PUBLIC lua_static)\n    set_target_properties(luac PROPERTIES \n        RUNTIME_OUTPUT_DIRECTORY ${PROJECT_BINARY_DIR}\n    )\nendif()\n\ninclude_directories(${LuaDir})\n')))),(0,r.kt)("h1",{id:"\u6d4b\u8bd5"},"\u6d4b\u8bd5"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"main.cpp",(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},'sol::state lua;\n  int x = 0;\n  lua.set_function("beep", [&x]{ ++x; printf("Welcome to use lua.\\n\\n\\n"); });\n  lua.script("beep()");\n  assert(x == 1);\n')))))}m.isMDXComponent=!0}}]);